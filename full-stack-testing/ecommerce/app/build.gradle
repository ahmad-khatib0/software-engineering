/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}


dependencies {
    // REST Assured for testing HTTP endpoints
    testImplementation 'io.rest-assured:rest-assured:5.4.0'

    // JUnit Jupiter (assuming you're using Version Catalogs)
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine' // or use libs if defined

    // Optional if running from IDEs or CLI
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // App dependencies
    implementation libs.guava
    implementation 'org.springframework.boot:spring-boot-starter-web'
}


// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'ecommerce.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
